<?php


/**
 * Skeleton subclass for performing query and update operations on the 'sf_language' table.
 *
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Tue Mar 30 10:29:44 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.language
 */
class SfLanguagePeer extends BaseSfLanguagePeer
{
  /**
   * Total de Idiomas
   * @return Integer
   */
  public static function totalLanguages()
  {
  	$c = new Criteria();
  	return self::doCount($c);
  }
  /**
   * Funcion que desactiva todos los idioma como principal
   *
   */
  public static function desactiveAllLanguages()
  {
  	$con = Propel::getConnection();

	// select from...
	$c1 = new Criteria();
	$c1->add(self::PRINCIPAL,1, Criteria::EQUAL);

	// update set
	$c2 = new Criteria();
	$c2->add(self::PRINCIPAL, 0);

	BasePeer::doUpdate($c1, $c2, $con);
  }
  /**
   * Activo como principal el language
   * @param <integer> $idLanguage
   */
  public static function setPrincipalLanguage($idLanguage)
  {
    $con = Propel::getConnection();
    // select from...
    $c1 = new Criteria();
    $c1->add(self::ID_LANGUAGE,$idLanguage, Criteria::EQUAL);

    // update set
    $c2 = new Criteria();
    $c2->add(self::PRINCIPAL, 1);
    $c2->add(self::STATUS, 1);
    BasePeer::doUpdate($c1, $c2, $con);
  }
  /**
   * Devuelve el objecto si el idioma seleccionado es principal antes de ser actualizado
   * @param <integer> $idLanguage
   * @return <array>
   */
  public static function isActualPrincipal($idLanguage)
  {
    $c = new Criteria();
    $c->add(self::ID_LANGUAGE, $idLanguage, Criteria::EQUAL);
    $c->add(self::PRINCIPAL, 1, Criteria::EQUAL);
    return self::doSelectOne($c);
  }
  /**
   * Retorna el Idioma Principal
   * @return <string>
   */
  public static function getLanguagePrincipal()
  {
    $c = new Criteria();
    //Eliminamos la columnas de seleccion en caso de que esten definidas
    $c->clearSelectColumns();
    //Se Agregan las Columnas necesarias
    $c->addSelectColumn(self::LANGUAGE);
    $c->addSelectColumn(self::COUNTRY);
    $c->addSelectColumn(self::LANG_COUNTRY);
    //Filtros
    $c->add(self::PRINCIPAL, 1,Criteria::EQUAL);
    $rs = self::doSelectStmt($c);
    //Se recuperan los registros y se genera arreglo
    while($res = $rs->fetch())
    {
        $language['language']   = $res['LANGUAGE'];
        $language['country']    = $res['COUNTRY'];
        $language['code']       = $res['LANG_COUNTRY'];
    }
    if (!empty($language)){
        return $language;
    }else{
        return false;
    }
  }
  
  public static function getCodeLanguage($lan)
  {
    $c = new Criteria();
    //Eliminamos la columnas de seleccion en caso de que esten definidas
    $c->clearSelectColumns();
    //Se Agregan las Columnas necesarias
    $c->addSelectColumn(self::LANG_COUNTRY);
    //Filtros
    $c->add(self::LANGUAGE, $lan,Criteria::EQUAL);
    $rs = self::doSelectStmt($c);
    //Se recuperan los registros y se genera arreglo
    while($res = $rs->fetch())
    {
        $language['code']       = $res['LANG_COUNTRY'];
    }
    if (!empty($language)){
        return $language;
    }else{
        return false;
    }
  }
  /**
   * Lista de los idiomas activos del lynx
   * @return <array>
   */
  public static function listLanguages()
  {
  	$c = new Criteria();
  	$c->add(self::STATUS, 1, Criteria::EQUAL);
  	return self::doSelect($c);
  }
  
  public static function listTabLanguages()
  {
  	$c = new Criteria();
        $c->addDescendingOrderByColumn(self::PRINCIPAL);
        $c->add(self::STATUS, 1, Criteria::EQUAL);
        return self::doSelect($c);
  }

} // SfLanguagePeer
